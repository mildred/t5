// Copyright (c) 2009 Mildred Ki'Lya <http://ki.lya.online.fr>
//
// Permission is hereby granted, free of charge, to any person
// obtaining a copy of this software and associated documentation
// files (the "Software"), to deal in the Software without
// restriction, including without limitation the rights to use,
// copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following
// conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
// OTHER DEALINGS IN THE SOFTWARE.

Section Header

  + name := STACK;

  - author        := "Mildred Ki'Lya <http://ki.lya.online.fr>";
  - copyright     := "2009 Mildred Ki'Lya";
  - comment       := "";

Section Inherit

  + parent_clonable :Expanded CLONABLE;

Section Private

  + frames :FAST_ARRAY(STACK_FRAME) :=
  ( + stack :FAST_ARRAY(STACK_FRAME);
    stack := FAST_ARRAY(STACK_FRAME).create_with_capacity 1;
    stack.add_last (STACK_FRAME.clone);
    stack
  );

Section Public

  - current :STACK_FRAME <- frames.last;

  - push s:STACK_FRAME   <- frames.add_last s;

  - push_copy            <- push (current.clone);

  - pop     :STACK_FRAME <-
  ( + result :STACK_FRAME;
    result := current;
    frames.remove_last;
    result
  );

Section SELF

  - make_from origin:SELF <-
  (
    frames := FAST_ARRAY(STACK_FRAME).create_with_capacity
      (origin.frames.count);
    origin.frames.foreach { f:STACK_FRAME;
      frames.add_last f;
    };
  );
