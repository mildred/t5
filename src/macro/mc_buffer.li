// Copyright (c) 2009 Mildred Ki'Lya <http://ki.lya.online.fr>
//
// Permission is hereby granted, free of charge, to any person
// obtaining a copy of this software and associated documentation
// files (the "Software"), to deal in the Software without
// restriction, including without limitation the rights to use,
// copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following
// conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
// OTHER DEALINGS IN THE SOFTWARE.

Section Header

  + name := MC_BUFFER;

  // Usage: \buffer{nop}
  //
  // Push a writer that will discard tokens send to it. Removes any output until
  // you pop it.
  //
  // Usage: \buffer{copy}
  //
  // Push a copy of the current writer
  //
  // Usage: \buffer{pop}
  //
  // Pop the last writer.

  - author        := "Mildred Ki'Lya <http://ki.lya.online.fr>";
  - copyright     := "2009 Mildred Ki'Lya";
  - comment       := "";

Section Inherit

  + parent :Expanded MACRO;

Section Public

  - execute_reader reader:READER writer writer:WRITER_STACK stack stack:STACK <-
  ( + tk1, tk2 :TOKEN;
    + op :ABSTRACT_STRING;

    tk1 := reader.last_token;

    tk2 := reader.read_processed_token stack;
    op := tk2.output;

    (op == "pop").if {
      writer.pop;
    }.elseif { op == "nop"} then {
      writer.push (WRITER_NOP.clone);
    }.elseif { op == "copy"} then {
      writer.push (writer.current.clone.make_parent_writer NULL);
    } else {
      writer.write_token tk1;
      reader.write_token tk2;
    };
  );

